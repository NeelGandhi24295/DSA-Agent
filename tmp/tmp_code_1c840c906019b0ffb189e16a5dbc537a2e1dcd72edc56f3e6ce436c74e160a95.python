code = """
class Node:
    def __init__(self, data):
        self.data = data
        self.next = None

class LinkedList:
    def __init__(self):
        self.head = None

    def insert_at_end(self, data):
        new_node = Node(data)
        if not self.head:
            self.head = new_node
            return
        last = self.head
        while last.next:
            last = last.next
        last.next = new_node

    def delete_node(self, key):
        temp = self.head

        if temp is not None:
            if temp.data == key:
                self.head = temp.next
                temp = None
                return

        while temp is not None:
            if temp.data == key:
                break
            prev = temp
            temp = temp.next

        if temp == None:
            return

        prev.next = temp.next
        temp = None

    def traverse_list(self):
        node = self.head
        while node:
            print(node.data, end=" ")
            node = node.next
        print()

# Test cases
llist = LinkedList()
llist.insert_at_end(1)
llist.insert_at_end(2)
llist.insert_at_end(3)
llist.traverse_list()   # Expected Output: 1 2 3

llist.delete_node(2)
llist.traverse_list()   # Expected Output: 1 3

llist.insert_at_end(4)
llist.traverse_list()   # Expected Output: 1 3 4
"""

with open("solutions.py", "w") as f:
    f.write(code)
