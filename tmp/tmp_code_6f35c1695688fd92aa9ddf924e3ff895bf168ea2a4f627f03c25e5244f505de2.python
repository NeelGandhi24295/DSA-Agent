code = """class Queue:
    def __init__(self):
        self.items = []

    def enqueue(self, x):
        self.items.append(x)

    def dequeue(self):
        if not self.is_empty():
            return self.items.pop(0)
        else:
            return "Queue is empty!"

    def peek(self):
        if not self.is_empty():
            return self.items[0]
        else:
            return "Queue is empty!"

    def is_empty(self):
        return len(self.items) == 0

# Test cases
queue = Queue()
queue.enqueue(1)
queue.enqueue(2)
queue.enqueue(3)

# Test Case 1: dequeue() operation
print(queue.dequeue())  # Expected output: 1

# Test Case 2: peek() operation
print(queue.peek())  # Expected output: 2

# Test Case 3: is_empty() operation
print(queue.is_empty())  # Expected output: False

# An additional check to observe the queue
queue.dequeue()
queue.dequeue()
print(queue.is_empty())  # Expected output: True
print(queue.dequeue())   # Expected output: Queue is empty!
"""

with open("solutions.py", "w") as f:
    f.write(code)
