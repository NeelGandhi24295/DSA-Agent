class Stack:
    def __init__(self):
        self.items = []

    def is_empty(self):
        return len(self.items) == 0

    def push(self, item):
        self.items.append(item)

    def pop(self):
        if not self.is_empty():
            return self.items.pop()
        raise IndexError("pop from empty stack")

    def peek(self):
        if not self.is_empty():
            return self.items[-1]
        raise IndexError("peek from empty stack")

    def size(self):
        return len(self.items)

# Test cases
stack = Stack()

print("Stack is empty:", stack.is_empty())  # Test case 1: Check if empty

stack.push(1)
stack.push(2)
stack.push(3)

print("Current top element:", stack.peek())  # Test case 2: Peek top element
print("Stack size:", stack.size())  # Test case 3: Check size

popped_element = stack.pop()
print("Popped element:", popped_element)  # Additional operation: Pop element
print("Stack size after pop:", stack.size())  # Check size after pop
